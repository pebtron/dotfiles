# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# Exports
export GPG_TTY=$(tty)
export PATH="$PATH:$HOME/bin:/usr/local/bin:/usr/local/sbin"
PATH=$PATH:$HOME/bin
if [ -d /opt/puppetlabs/bin ]; then
  PATH=$PATH:/opt/puppetlabs/bin
fi
export EDITOR='vim'
export VISUAL='vim'
export HISTCONTROL="ignorespace"
export HISTFILESIZE=1000
export HISTIGNORE="&:ls:ls -al:[bf]g:exit"
export HISTSIZE=1000
shopt -s cdspell
shopt -s checkwinsize
shopt -s cmdhist
shopt -s histappend
#set -o vi

# SSL inspect
function sslinspect () {
  echo '\n' \
    | openssl s_client -connect ${1}:${2:-443} 2>&1 \
    | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' \
    | openssl x509 -noout -subject -dates
}

# SSL multi
function sslmulti () {
  openssl crl2pkcs7 -nocrl -certfile ${1} \
    | openssl pkcs7 -print_certs -noout
}

# SSL SAN
function sslsan () {
  echo \
    | openssl s_client -connect ${1}:${2:-443} 2>&1 \
    | openssl x509 -noout -text \
    | awk -F, -v OFS="\n" '/DNS:/{x=gsub(/ *DNS:/, ""); $1=$1; print $0}'
}

function susu() {
  if [ -n "$SSH_TTY" ]; then
    sudo bash -c "SSH_TTY=$SSH_TTY\
      /bin/bash --rcfile /home/${USER}/.bashrc"
  else
    sudo bash -c "TMUX=$TMUX /bin/bash\
      --rcfile /home/${USER}/.bashrc"
  fi
}

# Colors {{{
# Reset
Color_Off='\[\e[0m\]'       # Text Reset

# Regular Colors
Black='\[\e[0;30m\]'        # Black
Red='\[\e[0;31m\]'          # Red
Green='\[\e[0;32m\]'        # Green
Yellow='\[\e[0;33m\]'       # Yellow
Blue='\[\e[0;34m\]'         # Blue
Purple='\[\e[0;35m\]'       # Purple
Cyan='\[\e[0;36m\]'         # Cyan
White='\[\e[0;37m\]'        # White

# Bold
BBlack='\[\e[1;30m\]'       # Black
BRed='\[\e[1;31m\]'         # Red
BGreen='\[\e[1;32m\]'       # Green
BYellow='\[\e[1;33m\]'      # Yellow
BBlue='\[\e[1;34m\]'        # Blue
BPurple='\[\e[1;35m\]'      # Purple
BCyan='\[\e[1;36m\]'        # Cyan
BWhite='\[\e[1;37m\]'       # White

# Underline
UBlack='\[\e[4;30m\]'       # Black
URed='\[\e[4;31m\]'         # Red
UGreen='\[\e[4;32m\]'       # Green
UYellow='\[\e[4;33m\]'      # Yellow
UBlue='\[\e[4;34m\]'        # Blue
UPurple='\[\e[4;35m\]'      # Purple
UCyan='\[\e[4;36m\]'        # Cyan
UWhite='\[\e[4;37m\]'       # White

# Background
On_Black='\[\e[40m\]'       # Black
On_Red='\[\e[41m\]'         # Red
On_Green='\[\e[42m\]'       # Green
On_Yellow='\[\e[43m\]'      # Yellow
On_Blue='\[\e[44m\]'        # Blue
On_Purple='\[\e[45m\]'      # Purple
On_Cyan='\[\e[46m\]'        # Cyan
On_White='\[\e[47m\]'       # White

# High Intensty
IBlack='\[\e[0;90m\]'       # Black
IRed='\[\e[0;91m\]'         # Red
IGreen='\[\e[0;92m\]'       # Green
IYellow='\[\e[0;93m\]'      # Yellow
IBlue='\[\e[0;94m\]'        # Blue
IPurple='\[\e[0;95m\]'      # Purple
ICyan='\[\e[0;96m\]'        # Cyan
White='\[\e[0;97m\]'        # White

# Bold High Intensty
BIBlack='\[\e[1;90m\]'      # Black
BIRed='\[\e[1;91m\]'        # Red
BIGreen='\[\e[1;92m\]'      # Green
BIYellow='\[\e[1;93m\]'     # Yellow
BIBlue='\[\e[1;94m\]'       # Blue
BIPurple='\[\e[1;95m\]'     # Purple
BICyan='\[\e[1;96m\]'       # Cyan
BWhite='\[\e[1;97m\]'       # White

# High Intensty backgrounds
On_IBlack='\[\e[0;100m\]'   # Black
On_IRed='\[\e[0;101m\]'     # Red
On_IGreen='\[\e[0;102m\]'   # Green
On_IYellow='\[\e[0;103m\]'  # Yellow
On_IBlue='\[\e[0;104m\]'    # Blue
On_IPurple='\[\e[10;95m\]'  # Purple
On_ICyan='\[\e[0;106m\]'    # Cyan
On_White='\[\e[0;107m\]'    # White

# Dump colors
# Also fun: curl -s https://gist.githubusercontent.com/HaleTom/89ffe32783f89f403bba96bd7bcd1263/raw/ | bash
function dump_colors() {
  for i in {0..255} ; do
    printf "\x1b[48;5;%sm%3d\e[0m " "$i" "$i"
    if (( i == 15 )) || (( i > 15 )) && (( (i-15) % 6 == 0 )); then
      printf "\n";
    fi
  done
}
# }}}
# Advanced prompt with 256 colors {{{
# Source: https://gist.github.com/ricardochimal/293517
function boldtext {
    echo "\\[\\033[1m\\]"$1"\\[\\033[0m\\]"
}

function bgcolor {
    echo "\\[\\033[48;5;"$1"m\\]"
}

function fgcolor {
    echo "\\[\\033[38;5;"$1"m\\]"
}

function resetcolor {
    echo "\\[\\e[0m\\]"
}
# }}}

# Completion
test -f /etc/bash_completion && source /etc/bash_completion
test -f ~/.bash/bash_completion && source ~/.bash/bash_completion

# Source bt tools
test -f ~/.bash/bt.sh && source ~/.bash/bt.sh

# Aliases
alias grep='grep --color=auto'
alias umutt='mutt -F ~/.mutt/muttrc-uc'
alias tmux='tmux -2'

# http://drupal.star.bnl.gov/STAR/blog-entry/jeromel/2009/feb/06/how-safely-start-ssh-agent-bashrc
test=`ps uxw | grep ssh-agent | grep -v grep  | awk '{print $2}' | xargs`
if [ "$test" = "" ]; then
   # there is no agent running
   if [ -e "$HOME/agent.sh" ]; then
      # remove the old file
      rm -f $HOME/agent.sh
   fi
   # start a new agent if wanted
   if [ -f ~/.bash/use_agent ]; then
     ssh-agent | grep -v echo >& $HOME/agent.sh
   fi
fi
test -e $HOME/agent.sh && source $HOME/agent.sh
alias kagent="kill -9 $SSH_AGENT_PID"
alias sadd='ssh-add -t28800'

__git_ps1 () {
    local b="$(git symbolic-ref HEAD 2>/dev/null)";
    if [ -n "$b" ]; then
        printf " (%s)" "${b##refs/heads/}";
    fi
}

# Mac OS X
if [[ `uname` == "Darwin" ]]; then
  alias ls='ls -aFG' # colors
  alias ll='ls -alG' # colors
  export GREP_COLOR="1;36"
  ulimit -n 8192 # mutt on Mac needs lots of open files
  if [ -f `brew --prefix`/etc/bash_completion ]; then
    . `brew --prefix`/etc/bash_completion
  fi
else
  eval "`dircolors -b`"
  alias ls='ls -aF --color=auto'
  alias ll='ls -al --color=auto'
  export GREP_COLOR="mt=1;36"
fi

# Prompt
export PROMPT_COMMAND='history -a'
test -f ~/.bash/prompt.sh && source ~/.bash/prompt.sh
